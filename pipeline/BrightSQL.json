{
	"name": "BrightSQL",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get all projects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"items": {
						"value": "@variables('APIs')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "SharpSpring",
							"type": "IfCondition",
							"typeProperties": {
								"expression": {
									"value": "@equals(item().bron ,'SharpSpring')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "HTTP request SharpSpring",
										"type": "Copy",
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"typeProperties": {
											"source": {
												"type": "HttpSource",
												"httpRequestTimeout": "00:01:40"
											},
											"sink": {
												"type": "SqlSink",
												"writeBatchSize": 10000
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": false,
											"dataIntegrationUnits": 0
										},
										"inputs": [
											{
												"referenceName": "SharpSpring",
												"type": "DatasetReference",
												"parameters": {
													"method": "@item().method",
													"entiteit": "@item().entiteit",
													"flowId": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "BrightSQL",
												"type": "DatasetReference",
												"parameters": {
													"Table": "@item().table"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Gripp",
							"type": "IfCondition",
							"typeProperties": {
								"expression": {
									"value": "@equals(item().bron ,'Gripp')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SharpSpring",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"typeProperties": {
								"variableName": "tempCurrentRow",
								"value": {
									"value": "@string(add(float(variables('currentRow')), float(250)))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Variable2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"typeProperties": {
								"variableName": "currentRow",
								"value": {
									"value": "@variables('tempCurrentRow')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "get all projects",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Gripp employee",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(variables('currentRow')),2500)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "set TempCurrentRow",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "getProjects",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"typeProperties": {
								"variableName": "tempCurrentRow",
								"value": {
									"value": "@string(add(float(variables('currentRow')), float(250)))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set CurrentRow",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "set TempCurrentRow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"typeProperties": {
								"variableName": "currentRow",
								"value": {
									"value": "@variables('tempCurrentRow')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "getProjects",
							"type": "Copy",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"source": {
									"type": "HttpSource",
									"httpRequestTimeout": "00:01:40"
								},
								"sink": {
									"type": "SqlSink",
									"writeBatchSize": 10000
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": false,
								"dataIntegrationUnits": 0,
								"translator": {
									"type": "TabularTranslator",
									"columnMappings": {
										"number": "number",
										"date": "date",
										"timezone_type": "timezone_type",
										"timezone": "timezone",
										"clientreference": "clientreference",
										"isbasis": "isbasis",
										"archived": "archived",
										"workdeliveraddress": "workdeliveraddress",
										"id": "id",
										"searchname": "searchname",
										"name": "name",
										"addhoursspecification": "addhoursspecification",
										"description": "description",
										"tags": "tags",
										"employees": "employees",
										"employees_starred": "employees_starred",
										"files": "files",
										"projectlines": "projectlines",
										"viewonlineurl": "viewonlineurl"
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Gripp",
									"type": "DatasetReference",
									"parameters": {
										"flowId": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										},
										"currentRow": {
											"value": "@int(variables('currentRow'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "BrightSQL",
									"type": "DatasetReference",
									"parameters": {
										"Table": "Gripp_Project_structured"
									}
								}
							]
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Gripp employee",
				"type": "Copy",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "HttpSource",
						"httpRequestTimeout": "00:01:40"
					},
					"sink": {
						"type": "SqlSink",
						"writeBatchSize": 10000,
						"preCopyScript": ""
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"dataIntegrationUnits": 0
				},
				"inputs": [
					{
						"referenceName": "Gripp_Employees",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Gripp_Employee",
						"type": "DatasetReference"
					}
				]
			}
		],
		"variables": {
			"APIs": {
				"type": "Array",
				"defaultValue": [
					{
						"bron": "Gripp",
						"method": "project.get",
						"table": "Gripp_Project_structured"
					}
				]
			},
			"currentRow": {
				"type": "String",
				"defaultValue": "0"
			},
			"tempCurrentRow": {
				"type": "String",
				"defaultValue": "0"
			}
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}